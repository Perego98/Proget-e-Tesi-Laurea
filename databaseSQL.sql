-- MySQL Script generated by MySQL Workbench
-- Tue Apr 28 14:12:00 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema candidature
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `candidature` ;

-- -----------------------------------------------------
-- Schema candidature
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `candidature` DEFAULT CHARACTER SET utf8 ;
USE `candidature` ;

-- -----------------------------------------------------
-- Table `candidature`.`utente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `candidature`.`utente` ;

CREATE TABLE IF NOT EXISTS `candidature`.`utente` (
  `username` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `cognome` VARCHAR(45) NOT NULL,
  `numeroTel` CHAR(12) NOT NULL,
  `user_admin` VARCHAR(30) NOT NULL,
  `mail` VARCHAR(55) NOT NULL,
  `ruolo` ENUM('hr', 'manager') NOT NULL DEFAULT 'not_set',
  PRIMARY KEY (`username`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `NumeroTel_UNIQUE` (`numeroTel` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `candidature`.`admin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `candidature`.`admin` ;

CREATE TABLE IF NOT EXISTS `candidature`.`admin` (
  `Username` VARCHAR(30) NOT NULL,
  `Password` VARCHAR(50) NOT NULL COMMENT 'Devo vedere come si implementa una cella per le password',
  `Nome` VARCHAR(45) NOT NULL,
  `Cognome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Username`),
  CONSTRAINT `fk_admin_utente`
    FOREIGN KEY (`Username`)
    REFERENCES `candidature`.`utente` (`user_admin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `candidature`.`Candidato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `candidature`.`Candidato` ;

CREATE TABLE IF NOT EXISTS `candidature`.`Candidato` (
  `idCandidato` INT NOT NULL AUTO_INCREMENT,
  `sato_candidatura` ENUM('new', 'assegnato_hr', 'assegnato_manager', 'in_valutazione', 'assunto', 'rigettato') NOT NULL DEFAULT 'new',
  `nome` VARCHAR(45) NOT NULL,
  `cognome` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(12) NOT NULL,
  `email` VARCHAR(55) NOT NULL,
  `codiceFiscale` VARCHAR(16) NOT NULL,
  `dataNascita` DATE NOT NULL,
  `tipoContratto` ENUM('tempo_indeterminato', 'tempo_determinato', 'somministrazione', 'a_chiamata', 'a_progetto', 'accessorio', 'apprendistato', 'tirocinio_formativo_e_orientamento', 'part-time') NOT NULL DEFAULT 'not_set',
  `ral` FLOAT NOT NULL DEFAULT 0,
  `tempo_preavviso_giorni` INT NOT NULL DEFAULT 10 COMMENT 'Numero di giorni preavviso',
  `tipoOfferta` ENUM('lavoro', 'stage', 'candidatura_spontanea') NOT NULL,
  `cabale_provenienza` VARCHAR(150) NOT NULL,
  `sede_preferita` VARCHAR(45) NULL,
  `aspettative` VARCHAR(100) NULL,
  `note` VARCHAR(500) NULL,
  `curriculum` BLOB NOT NULL COMMENT 'curriculum o caricato direttamente o si potrebbe salvare il percorso del file',
  `schedaValutazioneIniziale` VARCHAR(500) NULL,
  `note` VARCHAR(500) NULL,
  `supervisore` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCandidato`),
  UNIQUE INDEX `sede_preferita_UNIQUE` (`sede_preferita` ASC) VISIBLE,
  INDEX `fk_Candidato_utente1_idx` (`supervisore` ASC) VISIBLE,
  CONSTRAINT `fk_Candidato_utente1`
    FOREIGN KEY (`supervisore`)
    REFERENCES `candidature`.`utente` (`username`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
